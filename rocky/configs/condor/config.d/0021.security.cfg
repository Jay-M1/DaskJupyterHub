### Pool Security
### --------------------

### -- Authentication

### Always use authentication unless specifically disabled
SEC_DEFAULT_AUTHENTICATION   = REQUIRED
SEC_DEFAULT_ENCRYPTION       = OPTIONAL
SEC_DEFAULT_INTEGRITY        = REQUIRED
SEC_DEFAULT_NEGOTIATION      = REQUIRED
SEC_DAEMON_SESSION_DURATION  = 50000

### Clients (User or Daemon) should follow the Server/Daemon preference
SEC_CLIENT_AUTHENTICATION    = OPTIONAL
SEC_CLIENT_ENCRYPTION        = OPTIONAL
SEC_CLIENT_INTEGRITY         = OPTIONAL

### Don't annoy people with authentication on READ
SEC_READ_AUTHENTICATION      = OPTIONAL
SEC_READ_ENCRYPTION          = OPTIONAL
SEC_READ_INTEGRITY           = OPTIONAL

## Can authenticate with any strong security method
SEC_DEFAULT_AUTHENTICATION_METHODS = FS, PASSWORD, SSL, IDTOKENS, SCITOKENS
## Schedd/Startd may use matching-time strong authentication
SEC_ENABLE_MATCH_PASSWORD_AUTHENTICATION = TRUE

### -- Identities

## Condor maps authentication information to Identities
## Format is: username@domain/hostname
## username : an individual user, e.g. mfischer
## domain   : the realm people act from, e.g. etp.kit.edu
## hostname : the machine a specific entity acts from, e.g. portal1.etp.kit.edu
## There may be a single * wildcard in the username+domain and hostname

# ETP Resources
DomainEtp        = etp.kit.edu
HostEtp          = *$(DomainEtp)

# Cloud Resources
DomainCloudBwFor     = bwforcluster

# Docker
DockerHost = 10.0.0.0/8

# Nodes that securely join belong to us, hopefully
DEFAULT_DOMAIN_NAME    = $(DomainEtp)
EMAIL_DOMAIN           = $(FULL_HOSTNAME)
UID_DOMAIN             = $(DomainEtp)
TRUST_UID_DOMAIN       = TRUE


### -- Authorization
## Condor authorizes identities for specific operations
## This may be either
##    full identities
##    username@domain
##    hostname

## central manager has full power
EtpCentral     = condor@$(DomainEtp)/$(CentralManager), \
                 condor@$(DomainEtp)/$(HostEtp)
## Etp Condor Administrators
EtpCondorAdmin = mhorzela@$(DomainEtp)/$(HostEtp), \
                 mschnepf@$(DomainEtp)/$(HostEtp), \
                 rhofsaess@$(DomainEtp)/$(HostEtp), \
                 rvoncube@$(DomainEtp)/$(HostEtp), \
                 lreuter@$(DomainEtp)/$(HostEtp), \

# Caution: this doesn't follow authentication information format
SCHEDD.QUEUE_SUPER_USERS = $(QUEUE_SUPER_USERS) condor_pool \
                           mhorzela mschnepf rhofsaess rvoncube lreuter

## Central Manager and potential Condor Administrators
ALLOW_ADMINISTRATOR = $(ALLOW_ADMINISTRATOR) $(EtpCentral) $(EtpCondorAdmin)

ALLOW_CONFIG = $(ALLOW_CONFIG) $(ALLOW_ADMINISTRATOR)

## services run as condor or daemon (legacy), MATCH_PASSWORD_AUTHENTICATION uses submit-side@matchsession pseudo-identity
ALLOW_DAEMON        = condor@$(DomainEtp), \
                      condor_pool@$(DomainEtp), \
                      condor@$(DomainEtp), \
                      condor_pool@$(DomainEtp), \
                      condor@$(DockerHost), \
                      condor_pool@(DockerHost), \
                      condor@$(DomainCloudBwFor), \
                      condor_pool@$(DomainCloudBwFor), \
                      submit-side@matchsession

ALLOW_NEGOTIATOR    = condor@$(DomainEtp)/$(CentralManager), \
                      condor_pool@$(DomainEtp)/$(CentralManager), \

## Local owners may control Condor to respect them
ALLOW_OWNER         = $(FULL_HOSTNAME), $(IP_ADDRESS), $(ALLOW_ADMINISTRATOR)

# All of our machines may handle jobs
ALLOW_WRITE         = *$(DomainEtp), \
                      *$(DomainEtp), \
                      *$(DomainCloudBwFor), \
                      $(DockerHost)
                      
## Set certificate location to CVMFS to enable certificates from Grid sites
AUTH_SSL_CLIENT_CADIR=/cvmfs/grid.cern.ch/etc/grid-security/certificates
AUTH_SSL_CLIENT_CAFILE =

## Password for daemons trying to join the pool
SEC_PASSWORD_FILE = $(ETC)/security/pool_pw.passwd
