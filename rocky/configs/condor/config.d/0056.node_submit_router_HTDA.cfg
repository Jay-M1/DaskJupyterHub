### HPDA Schedd Setup
### --------------------
### To be used on nodes that allow job submission

# intrinsic job router:
#  - test for HPDA required attribute(s)
#  - disable HTCondor grid routing
#  - inject routing keywords
# NOTE: This requires new style ClassAd syntax

JOB_ROUTER_HTDA = $(JOB_ROUTER)

JOB_ROUTER_HTDA_ARGS = -local-name JOB_ROUTER_HTDA
JOB_ROUTER_HTDA_LOG = $(LOG)/HTDARouterLog
JOB_ROUTER_HTDA_ENVIRONMENT = "_CONDOR_JOB_ROUTER_LOG=$(LOG)/HTDARouterLog _CONDOR_JOB_ROUTER_LOCK=$(LOCK)/HTDARouterLock _CONDOR_ROUTER_NAME=HTDARouter"

DAEMON_LIST = $(DAEMON_LIST), JOB_ROUTER_HTDA

# router can poll frequently as hooks may skip frequent updates
JOB_ROUTER_POLLING_PERIOD = 60

# Increase ClassAd parser buffer character size (defaults to 10240) to handle large job ClassAds
PIPE_BUFFER_MAX = 102400

JOB_ROUTER_HTDA.JOB_ROUTER_ENTRIES = \
        [ \
                name = "NaviXRouteVanilla"; \
                requirements = ( target.JobUniverse is 5 && target.JobWasRouted isnt TRUE && target.WantDocker is undefined  && TARGET.ExperimentalJob is TRUE && TARGET.INPUT_FILES isnt undefined); \
                MaxJobs = 1000; \
                MaxIdleJobs = 750; \
                TargetUniverse = 5;\
                set_JobWasRouted = TRUE; \
                set_HookKeyword = "NAVIX"; \
                set_HPDA_REQUIREMENT = FALSE; \
                #set_HPDA_Rank = (0.0); \
                copy_Requirements = "Requirements_RAW"; \
                #set_Requirements = "$(Requirement_RAW) + $(HPDA_REQUIREMENT)"; \
                set_Requirements = ( Requirements_RAW ) && ( HPDA_REQUIREMENT ); \
                set_WantDocker = True; \
                set_DockerImage = "mschnepf/slc7-condocker"; \
                GridResource = "NONE"; \
                OverrideRoutingEntry = TRUE; \
                EditJobInPlace = FALSE;\
        ] \
        [ \
                name = "NaviXRouteDocker"; \
                requirements = ( target.JobUniverse is 5 && target.JobWasRouted isnt TRUE && target.WantDocker is True && TARGET.ExperimentalJob is TRUE && TARGET.INPUT_FILES isnt undefined); \
                MaxJobs = 1000; \
                MaxIdleJobs = 750; \
                TargetUniverse = 5;\
                set_JobWasRouted = TRUE; \
                set_HookKeyword = "NAVIX"; \
                set_HPDA_REQUIREMENT = FALSE; \
                #set_HPDA_Rank = (0.0); \
                copy_Requirements = "Requirements_RAW"; \
                set_Requirements = (Requirements_RAW) && (HPDA_REQUIREMENT); \
                GridResource = "NONE"; \
                OverrideRoutingEntry = TRUE; \
                EditJobInPlace = False;\
        ] \


JOB_ROUTER_HTDA.JOB_ROUTER_NAME = $(HOSTNAME).jobrouterhtda

### external NaviX hooks
JOB_ROUTER_HTDA.JOB_ROUTER_HOOK_KEYWORD    = NAVIX

JOB_ROUTER_HTDA.NAVIX_HOOK_TRANSLATE_JOB   = /opt/NaviX/hooks/lightHook_translate
JOB_ROUTER_HTDA.NAVIX_HOOK_UPDATE_JOB_INFO = /opt/NaviX/hooks/lightHook_update
JOB_ROUTER_HTDA.NAVIX_HOOK_JOB_FINALIZE    = /opt/NaviX/hooks/lightHook_finalize
# JOB_ROUTER_HTDA.NAVIX_HOOK_JOB_CLEANUP     = /opt/NaviX/hooks/lightHook_cleanup

# Disable PROCD as job_router runs as submitting user, not condor/root as PROCD does
# JOB_ROUTER_HTDA.USE_PROCD = FALSE
